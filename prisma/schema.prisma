generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model appuser {
  user_id       Int           @id @default(autoincrement())
  email         String        @unique @db.VarChar(255)
  user_name     String        @db.VarChar(100)
  age           Int?
  user_type     String?       @db.VarChar(50)
  user_password String        @db.VarChar(255)
  preference_1  String?
  preference_2  String?
  preference_3  String?
  client        client?
  reservation   reservation[]
}

model client {
  client_id          Int     @id @default(autoincrement())
  preference_history String?
  appuser            appuser @relation(fields: [client_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

model eventinfo {
  event_id      Int            @id @default(autoincrement())
  organizer_id  Int?
  event_name    String         @db.VarChar(100)
  description   String?
  event_date    DateTime?      @db.Date
  start_time    DateTime?      @db.Time(6)
  end_time      DateTime?      @db.Time(6)
  location_id   Int?
  price         Decimal?       @db.Decimal(10, 2)
  availability  Int?
  eventlocation eventlocation? @relation(fields: [location_id], references: [location_id], onUpdate: NoAction)
  organizer     organizer?     @relation(fields: [organizer_id], references: [organizer_id], onDelete: Cascade, onUpdate: NoAction)
  reservation   reservation[]
}

model eventlocation {
  location_id Int         @id @default(autoincrement())
  address     String      @db.VarChar(255)
  eventinfo   eventinfo[]
  weather     weather[]
}

model organizer {
  organizer_id   Int         @id @default(autoincrement())
  organizer_name String      @db.VarChar(100)
  contact        String?     @db.VarChar(100)
  organizer_type String?     @db.VarChar(50)
  eventinfo      eventinfo[]
}

model reservation {
  reservation_id   Int        @id @default(autoincrement())
  user_id          Int?
  event_id         Int?
  ticket_quantity  Int?
  reservation_date DateTime?  @db.Date
  status           String?    @db.VarChar(50)
  eventinfo        eventinfo? @relation(fields: [event_id], references: [event_id], onDelete: Cascade, onUpdate: NoAction)
  appuser          appuser?   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
}

model weather {
  weather_id        Int            @id @default(autoincrement())
  location_id       Int?
  temperature       Decimal?       @db.Decimal(5, 2)
  weather_condition String?        @db.VarChar(50)
  weather_date      DateTime?      @db.Date
  weather_time      DateTime?      @db.Time(6)
  eventlocation     eventlocation? @relation(fields: [location_id], references: [location_id], onDelete: Cascade, onUpdate: NoAction)
}
